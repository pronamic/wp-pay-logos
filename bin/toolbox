#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Finder\Finder;

$application = new Application( 'WordPress Pay Logos', '1.0.0' );

$application
	->register( 'all' )
	->addOption(
		'path',
		'p',
		InputOption::VALUE_REQUIRED,
		'Path to scan for files.',
		''
	)
	->setCode( function( InputInterface $input, OutputInterface $output ) {
		$application = $this->getApplication();

		$path = $input->getOption( 'path' );

		$filesystem = new Filesystem();

		$dir_cwd  = new SplFileInfo( getcwd() );
		$dir_src  = new SplFileInfo( __DIR__ . '/../src/' . $path );
		$dir_dist = new SplFileInfo( __DIR__ . '/../dist/' . $path );

		$path_src  = $filesystem->makePathRelative( $dir_src->getRealPath(), $dir_cwd->getRealPath() );
		$path_dist = $filesystem->makePathRelative( $dir_dist->getRealPath(), $dir_cwd->getRealPath() );

		/**
		 * Synchronize.
		 */
		$command = sprintf(
			'rsync --delete --archive --include "*/"  --include="*.svg" --exclude="*" --exclude="src-*" %s %s',
			$path_src,
			$path_dist
		);

		echo $command, PHP_EOL;

		passthru( $command );

		/**
		 * SVGO.
		 */
		$command = 'svgo --recursive --folder ' . $path_dist;

		echo $command, PHP_EOL;

		passthru( $command );

		/**
		 * SVG to PNG.
		 */
		$finder = new Finder();

		$finder->in( $dir_dist->getRealPath() )->files()->name( '*.svg' );

		foreach ( $finder as $file ) {
			echo $file->getRealPath(), PHP_EOL;

			$filename = $file->getFilename();

			echo $filename, PHP_EOL;

			$result = preg_match( '/-(?<width>\d*)x(?<height>\d*)./', $filename, $matches );

			if ( ! array_key_exists( 'width', $matches ) ) {
				continue;
			}

			if ( ! array_key_exists( 'height', $matches ) ) {
				continue;
			}

			$width  = $matches['width'];
			$height = $matches['height'];

			$densities = array(
				'1' => (object) array(
					'factor'    => 1,
					'extension' => '.png',
				),
				'2' => (object) array(
					'factor'    => 2,
					'extension' => '@2x.png',
				),
				'3' => (object) array(
					'factor'    => 3,
					'extension' => '@3x.png',
				),
				'4' => (object) array(
					'factor'    => 4,
					'extension' => '@4x.png',
				),
			);

			foreach ( $densities as $density ) {
				$png = $file->getPath() . '/' . $file->getBasename( '.' . $file->getExtension() ) . $density->extension;

				$w = $width * $density->factor;
				$h = $height * $density->factor;

				$command = sprintf(
					'inkscape --export-filename=%s --export-width=%d --export-height=%d %s',
					$png,
					$w,
					$h,
					$file->getRealPath()
				);

				echo $command, PHP_EOL;

				passthru( $command );
			}
		}

		/**
		 * PNG compressor.
		 */
		$finder = new Finder();

		$finder->in( $dir_dist->getRealPath() )->files()->name( '*.png' );

		foreach ( $finder as $file ) {
			$command = sprintf(
				'pngquant %s --ext=.png --force',
				$file->getRealPath()
			);

			echo $command, PHP_EOL;

			passthru( $command );
		}
	} );

$application->run();
